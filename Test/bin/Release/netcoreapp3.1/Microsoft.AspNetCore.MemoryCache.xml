<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.MemoryCache</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.MemoryCache.CacheClearPolicy">
            <summary>
            缓存清理策略
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.CacheClearPolicy.ClearAll">
            <summary>
            清理所有可能的缓存项目
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.CacheClearPolicy.OnlyExpired">
            <summary>
            仅清理已经过期的缓存项目
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.MemoryCache.MemoryCache">
            <summary>
            内存缓存
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._cache">
            <summary>缓存字典</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._jsonSerialize">
            <summary>是否启用Json序列化</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._autoClearCache">
            <summary>是否自动清理缓存</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._clearInterval">
            <summary>清理间隔时间，以秒为单位，默认60秒清理一次</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._clearCapacity">
            <summary>清理容量，默认为0表示每次都要清理整个缓存中的过期项目</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._cancelToken">
            <summary>取消清理令牌</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.MemoryCache.MemoryCache._count">
            <summary>缓存项目数量</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.#ctor(System.Boolean,System.Int32,System.Int32)">
            <summary>
            实例化缓存
            </summary>
            <param name="autoClearCache">是否启用自动清理缓存，默认开启</param>
            <param name="clearInterval">清理间隔时间，以秒为单位，默认60秒清理一次</param>
            <param name="clearCapacity">清理容量，默认为0表示每次都要清理整个缓存中的过期项目</param>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Finalize">
            <summary>
            卸载资源
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Dispose">
            <summary>销毁</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Name">
            <summary>
            缓存名称
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Policy">
            <summary>
            缓存清理策略
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Interval">
            <summary>清理间隔，以秒为单位，默认60秒，表示每隔60秒清理一次缓存</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Capacity">
            <summary>
            清理容量，默认为0表示每次都要清理整个缓存中的过期项目，>0表示每次找出指定容量的过期缓存进行清理(能减少扫描整个缓存的频率)。
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Count">
            <summary>返回缓存项目总量</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.Keys">
            <summary>返回所有键。实际返回所有Key的集合，数据量较大时注意性能</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.JsonSerialize">
            <summary>
            是否启用Json序列化，默认开启。
            当启用Json序列化时对性能会有所损耗，经过测试对性能影响不是很大。
            开启Json序列化用来缓存对象特别有用，由于序列化会把对象转换成字符串存储，因此即使被缓存对象被销毁了也能找回。
            为了提高性能采用System.Text.Json而非Newtonsoft.Json，需要注意System.Text.Json只能序列化属性，不能序列化字段。
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.ContainsKey(System.String)">
            <summary>是否包含缓存项</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Add``1(System.String,``0,System.Int32,System.Boolean)">
            <summary>增加缓存项目</summary>
            <typeparam name="T">值类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="ttl">项目的存活时间，以秒为单位。默认-1表示永不过期。</param>
            <param name="replace">当项目已经存在时是否替换。如果设置成false，则已存在时不替换，此时可用于锁争夺</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Update``1(System.String,``0)">
            <summary>修改缓存项目</summary>
            <typeparam name="T">值类型</typeparam>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Remove(System.String[])">
            <summary>删除缓存项目，支持批量删除</summary>
            <param name="keys">键集合</param>
            <returns>实际删除的缓存项目个数</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Get``1(System.String)">
            <summary>获取缓存项，不存在时返回默认值</summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.Clear">
            <summary>
            清空所有缓存项目
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.SetTTL(System.String,System.Int32)">
            <summary>设置缓存项目的存活时间</summary>
            <param name="key">键</param>
            <param name="ttl">存活时间(Time to live)，以秒为单位，-1表示永不过期</param>
            <returns>设置是否成功</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.GetTTL(System.String)">
            <summary>获取缓存项目剩余的存活时间(Time to live)，以秒为单位，-1表示永不过期</summary>
            <param name="key">键</param>
            <returns>缓存项目不存在或已经过期时返回0</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.CreateClearTask">
            <summary>创建清理缓存任务</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.ClearCacheItem(Microsoft.AspNetCore.MemoryCache.CacheClearPolicy)">
            <summary>
            清理缓存项目。
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem">
            <summary>
            缓存项目
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.Value">
            <summary>
            项目值
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.TTL">
            <summary>
            存活时间(Time To Live)，以秒为单位，-1表示永不过期
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.Expire">
            <summary>
            到期时间(Expire Time)，以纳秒为单位
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.Alive">
            <summary>
            活跃时间(Alive Time)，以纳秒为单位
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.#ctor(System.Object,System.Int32)">
            <summary>构造缓存项目</summary>
            <param name="value"></param>
            <param name="ttl"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.Set(System.Object,System.Int32)">
            <summary>设置项目的值和存活时间</summary>
            <param name="value"></param>
            <param name="ttl"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.MemoryCache.CacheItem.Set(System.Int32)">
            <summary>设置项目的存活时间</summary>
            <param name="ttl"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.MemoryCache.TypeConvert">
            <summary>
            对象转换
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Bool(System.Object)">
            <summary>
            转换成布尔值
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Int(System.Object)">
            <summary>
            转换成整型值
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Lng(System.Object)">
            <summary>
            转换成长整型值
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Dbl(System.Object)">
            <summary>
            转换成双精度型值
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Dec(System.Object)">
            <summary>
            转换成数字
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Date(System.Object)">
            <summary>
            转换成日期
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Str(System.Object)">
            <summary>
            转换成字符串
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Dbs(System.Object)">
            <summary>
            转换成数据库非空字符串
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2BigInt(System.Object)">
            <summary>
            转换成大整型
            </summary>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2BigInt``1(System.Numerics.BigInteger)">
            <summary>
            转换大整型为指定类型
            </summary>
            <typeparam name="T">转换的指定类型</typeparam>
            <param name="value">要转换的值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.C2Type``1(System.Object)">
            <summary>
            转换对象到指定类型
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="value">转换的值</param>
            <returns>转换后的目标类型值，转换失败则返回目标类型的默认值</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.IsInteger(System.Object)">
            <summary>
            是否为整型
            </summary>
            <param name="value">要判定的值</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.IsNumeric(System.Object)">
            <summary>
            是否为数字
            </summary>
            <param name="value">要判定的值</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.MemoryCache.TypeConvert.IsDate(System.Object)">
            <summary>
            是否为日期
            </summary>
            <param name="value">要判定的值</param>
            <returns></returns>
        </member>
    </members>
</doc>
